// sys_intel_niosv_c_0.v

// This file was auto-generated from intel_niosv_c_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 24.1 1077

`timescale 1 ps / 1 ps
module sys_intel_niosv_c_0 (
		input  wire        clk,                               //                 clk.clk
		input  wire        reset_reset,                       //               reset.reset
		input  wire [31:0] instruction_manager_readdata,      // instruction_manager.readdata
		input  wire        instruction_manager_waitrequest,   //                    .waitrequest
		input  wire        instruction_manager_readdatavalid, //                    .readdatavalid
		input  wire [1:0]  instruction_manager_response,      //                    .response
		output wire [31:0] instruction_manager_address,       //                    .address
		output wire        instruction_manager_read,          //                    .read
		input  wire [31:0] data_manager_readdata,             //        data_manager.readdata
		input  wire        data_manager_waitrequest,          //                    .waitrequest
		input  wire        data_manager_readdatavalid,        //                    .readdatavalid
		input  wire [1:0]  data_manager_response,             //                    .response
		output wire [31:0] data_manager_address,              //                    .address
		output wire        data_manager_read,                 //                    .read
		output wire        data_manager_write,                //                    .write
		output wire [31:0] data_manager_writedata,            //                    .writedata
		output wire [3:0]  data_manager_byteenable,           //                    .byteenable
		input  wire        data_manager_writeresponsevalid    //                    .writeresponsevalid
	);

	sys_intel_niosv_c_0_hart #(
		.RESET_VECTOR    (32'b00000000000000001000000000000000),
		.DBG_EXPN_VECTOR (32'b000000000000000000000000000000-1),
		.CORE_EXTN       (256),
		.DEBUG_ENABLED   (0),
		.DEVICE_FAMILY   ("Cyclone 10 LP"),
		.USE_RESET_REQ   (0),
		.CSR_ENABLED     (0),
		.ECC_EN          (0)
	) hart (
		.clk                   (clk),                               //             cpu_clk.clk
		.reset                 (reset_reset),                       //           cpu_reset.reset
		.instr_avl_rdata       (instruction_manager_readdata),      // instruction_manager.readdata
		.instr_avl_waitrequest (instruction_manager_waitrequest),   //                    .waitrequest
		.instr_avl_rdatavalid  (instruction_manager_readdatavalid), //                    .readdatavalid
		.instr_avl_resp        (instruction_manager_response),      //                    .response
		.instr_avl_addr        (instruction_manager_address),       //                    .address
		.instr_avl_read        (instruction_manager_read),          //                    .read
		.data_avl_rdata        (data_manager_readdata),             //        data_manager.readdata
		.data_avl_waitrequest  (data_manager_waitrequest),          //                    .waitrequest
		.data_avl_rdatavalid   (data_manager_readdatavalid),        //                    .readdatavalid
		.data_avl_resp         (data_manager_response),             //                    .response
		.data_avl_addr         (data_manager_address),              //                    .address
		.data_avl_read         (data_manager_read),                 //                    .read
		.data_avl_write        (data_manager_write),                //                    .write
		.data_avl_wdata        (data_manager_writedata),            //                    .writedata
		.data_avl_byteen       (data_manager_byteenable),           //                    .byteenable
		.data_avl_wrespvalid   (data_manager_writeresponsevalid),   //                    .writeresponsevalid
		.reset_req             (1'b0),                              //         (terminated)
		.reset_req_ack         (),                                  //         (terminated)
		.core_ecc_status       (),                                  //         (terminated)
		.core_ecc_src          (),                                  //         (terminated)
		.irq_plat_vec          (16'b0000000000000000),              //         (terminated)
		.irq_debug             (1'b0),                              //         (terminated)
		.irq_ext               (1'b0),                              //         (terminated)
		.irq_timer             (1'b0),                              //         (terminated)
		.irq_sw                (1'b0)                               //         (terminated)
	);

endmodule
